call pathogen#infect()

set nocompatible
syntax on
let $VIMHOME = $HOME."/.vim"

filetype on
filetype plugin on

let mapleader=','

""Normal set 
set cursorline
set showmode
set history=1000
set undolevels=100
set ruler
set ic



" Keep 3 lines after/before the cursor
set so=3

" active mouse on terminal
set mouse=a

" Turn off swap files
set noswapfile
set nobackup
set nowb


" Move codeblocks
vnoremap < <gv
vnoremap > >gv

" Better copy&paste
set clipboard=unnamed

"setlocal colorcolumn=81
highlight ColorColumn guibg=#000000

" Colors
autocmd ColorScheme * hi ColorColumn ctermbg=Black guibg=Black ctermfg=NONE guifg=NONE

set expandtab
au BufWinEnter * set autoindent|set ts=4|set sw=4
au BufWinEnter *.html,*.js,*.css,*.scss,*.scala,*.yml,*.less set ts=2|set sw=2
au BufWinEnter *.scss set filetype=css


""Number
set number
map <silent><F2> :set invnumber<CR>

"Shourcouts
noremap % v%
map <Leader>z u<CR>
map <Leader><Leader> $<CR>
""Sort lines
vmap <leader>s :sort u<CR>

""Autocomplete functions
autocmd FileType c set omnifunc=ccomplete#Complete
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags


autocmd BufWrite *.py :call Flake8()

let g:SuperTabDefaultCompletionType = "context"

if has("gui_running")
    colorscheme desertEx
    set cursorcolumn
else
    colorscheme default " hack to force the highlight group to be created
endif


set guitablabel=%M%t
map <silent><C-m> :tabnext<CR>
map <silent><C-n> :tabprevious<CR>
map <silent><C-t> :tabnew<CR>


""TabLeader
vmap <leader>= :Tabularize /=<CR>
vmap <leader>: :Tabularize /:\zs<CR>


""Python
""let g:pymode = 1
let g:pymode_doc = 1
let g:pymode_doc_key = 'K'


nmap <Leader>c <Plug>CommentaryLine
xmap <Leader>c <Plug>Commentary

augroup plugin_commentary
    au!
    au FileType python setlocal commentstring=#%s
    au FileType yml setlocal commentstring=#%s
    au FileType htmldjango setlocal commentstring={#\ %s\ #}
    au FileType puppet setlocal commentstring=#\ %s
augroup END

map <C-l> :TagbarOpen fj<CR>
vmap <C-l> :TagbarOpen fj<CR>

map <silent><C-r> :NERDTreeToggle <CR>
vmap <silent><C-r> :NERDTreeToggle <CR>

"" Set Home for the current file
map <C-h> :call CallHome()<CR>
vmap <C-h> :call CallHome()<CR>
function! CallHome() 
    :cd %:p:h
    :pwd
endfunction

func! DeleteTrailingWS()
    exe "normal mz"
    %s/\s\+$//ge
    exe "normal `z"
endfunc
autocmd BufWrite *.py :call DeleteTrailingWS()
