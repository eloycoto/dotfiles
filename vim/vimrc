call pathogen#infect()
" For colors follow this link:
" http://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html
set nocompatible
syntax on
let $VIMHOME = $HOME."/.vim"

filetype on
filetype plugin on

let mapleader=','

""Normal set
set cursorline
set showmode
set history=1000
set undolevels=100
set ruler
set ic
set splitbelow
set splitright
set laststatus=2

" Keep 3 lines after/before the cursor
set so=3

" active mouse on terminal
set mouse=a

" Turn off swap files
set noswapfile
set nobackup
set nowb


" Move codeblocks
vnoremap < <gv
vnoremap > >gv

" codeblocks up/down
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

" Better copy&paste
set clipboard=unnamed

"Backspace fix in mac
set backspace=start,eol,indent

"Ctrl-P
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlPMRU'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_switch_buffer = 'et'  " jump to a file if it's open already
let g:ctrlp_mruf_max=450    " number of recently opened files
let g:ctrlp_max_files=0     " do not limit the number of searchable files
let g:ctrlp_use_caching = 1
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_cache_dir = $HOME.'/.cache/ctrlp'
let g:ctrlp_match_window = 'bottom,order:btt,max:10,results:10'
let g:ctrlp_buftag_types = {'go' : '--language-force=go --golang-types=ftv'}

"Colorscheme changes
autocmd ColorScheme * hi Visual term=reverse cterm=reverse ctermfg=10 ctermbg=8 guibg=DarkGrey
autocmd ColorScheme * hi SpellBad ctermfg=160 ctermbg=8

if has("patch-7.4.710")
    set listchars=eol:¬,tab:>·,trail:~,extends:>,precedes:<,space:␣
endif

"setlocal colorcolumn=81
match ColorColumn '\%>80v.\+'
autocmd ColorScheme * hi ColorColumn ctermbg=241
function! g:ToggleColorColumn()
    if &colorcolumn != ''
        setlocal colorcolumn&
    else
        setlocal colorcolumn=+1
    endif
endfunction

nnoremap <silent> <leader>c :call g:ToggleColorColumn()<CR>

set expandtab
au BufWinEnter * set autoindent|set ts=4|set sw=4
au BufWinEnter *.html,*.js,*.css,*.scss,*.scala,*.yml,*yaml,*.less set ts=2|set sw=2
au BufWinEnter *.scss set filetype=css


""Number
set number
map <silent><F2> :set invnumber<CR>

"Shortcuts
noremap % v%
map <Leader>z u<CR>
map <Leader><Leader> $<CR>
""Sort lines
vmap <leader>s :sort u<CR>

""Autocomplete functions
autocmd FileType c set omnifunc=ccomplete#Complete
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd BufRead,BufNewFile *.md setlocal textwidth=80
autocmd BufRead,BufNewFile *.rst setlocal textwidth=80

"C-b to autocompelte all
:inoremap <C-b> <C-x><C-o>

if has("gui_running")
    colorscheme molokai
    set cursorcolumn
else
    colorscheme molokai
    "colorscheme default " hack to force the highlight group to be created
endif


set guitablabel=%M%t
map <silent><C-m> :tabnext<CR>
map <silent><C-k> :tabnext<CR>
map <silent><C-n> :tabprevious<CR>
map <silent><C-j> :tabprevious<CR>
map <silent><C-t> :tabnew<CR>

""TabLeader
vmap <leader>= :Tabularize /=<CR>
vmap <leader>: :Tabularize /:\zs<CR>

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#virtualenv#enabled = 1
let g:airline#extensions#tabline#enabled = 1

""Python
""let g:pymode = 1
let g:pymode_doc = 1
let g:pymode_doc_key = 'K'
let g:pymode_folding = 0

"""Golang
let g:go_fmt_command = "goimports"
let g:go_highlight_types = 1
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_auto_type_info = 1
let g:go_metalinter_autosave = 1
let g:syntastic_go_checkers = ['govet', 'errcheck', 'go']
let g:go_auto_sameids = 1

xmap <Leader>c <Plug>Commentary

augroup plugin_commentary
    au!
    au FileType python setlocal commentstring=#%s
    au FileType yml setlocal commentstring=#%s
    au FileType htmldjango setlocal commentstring={#\ %s\ #}
    au FileType puppet setlocal commentstring=#\ %s
augroup END

map <C-a> :TagbarToggle<CR>
vmap <C-a> :TagbarToggle<CR>

map <silent><C-r> :NERDTreeToggle <CR>
vmap <silent><C-r> :NERDTreeToggle <CR>

"" Set Home for the current file
map <C-ha :call CallHome()<CR>
vmap <C-h> :call CallHome()<CR>
function! CallHome()
    :cd %:p:h
    :pwd
endfunction

func! DeleteTrailingWS()
    exe "normal mz"
    %s/\s\+$//ge
    exe "normal `z"
endfunc
"autocmd BufWrite *.py :call DeleteTrailingWS()
autocmd BufWritePre * :%s/\s\+$//e

""Ser/Kamailio or Opensips
let g:tagbar_type_ser = {
    \ 'ctagstype' : 'ser',
    \ 'kinds' : [
        \ 'a:Avp',
        \ 'r:routes',
    \ ]
\ }

let g:indentLine_color_term = 239

let g:eighties_enabled = 1
let g:eighties_minimum_width = 80
let g:eighties_extra_width = 0 " Increase this if you want some extra room
let g:eighties_compute = 1 " Disable this if you just want the minimum + extra
